Q. N개의 동전을 가지고 있습니다. 이때 N개의 동전을 이용하여 만들 수 없는 양의 정수 금액 중 최솟값을 구하는 프로그램을 작성하세요.

- 다른 사람의 풀이

그야말로 말도 안 나오는 풀이였다.
어떻게 이런 식을 짤 수가 있는 건지.
이건 내가 아무리 문제를 많이 풀어도 못 만들 코드인 것 같다.
O(n^2)으로 문제를 해결했던 내가 초라해지는 순간이었다.

idea: 올림차순한 리스트의 원소들을 0번째 인덱스부터 더한다.
그 더한 값을 누적해놓다가, 누적한 값보다 더 큰 원소가 등장하면
누적한 값의 숫자를 만들 수 없다는 이야기이므로
그 값을 답으로 출력한다.

coins = int(input())
coin = list(map(int, input().split()))
coin.sort()

target = 1

for c in coin:
    if target < c:
        break
    target += c
print(target)

- 나의 풀이

coins = int(input())
coin = list(map(int, input().split()))
coin.sort(reverse=True)

target = 1
n = 1

'''
target으로 들어온 동전을 내림차순한 리스트의 요소들을 사용해 뺀다.
0번째 인덱스부터 계속 차감이 되는데
차감이 되다가 정확히 0이 되지 않는 target이 들어왔다면 break를 하고
답을 출력한다.
'''

while True:
    for i in coin:
        if target >= i:
            target -= i
        
    if target == 0:
        n += 1
        target = n
    else:
        break
print(n)
