import sys

n = int(sys.stdin.readline().rstrip())
lost = list(map(int, sys.stdin.readline().split()))
reserve = list(map(int, sys.stdin.readline().split()))

def solution(n, lost, reserve):
    attendants = n - len(lost)
    for i in range(len(reserve)):
        for j in range(len(lost)):
            if reserve[i] + 1 == lost[j]:
                reserve[i] = True
                lost[j] = True
                attendants += 1
            if reserve[i] - 1 == lost[j]:
                reserve[i] = True
                lost[j] = True
                attendants += 1
    return attendants

import sys

n = int(sys.stdin.readline().rstrip())
lost = list(map(int, sys.stdin.readline().split()))
reserve = list(map(int, sys.stdin.readline().split()))

def solution(n, lost, reserve):
    for i in range(len(reserve)):
        if reserve[i] in lost:
            lost.remove(reserve[i])
            reserve[i] = True
    attendants = n - len(lost)
    for i in range(len(reserve)):
        for j in range(len(lost)):
            if reserve[i] + 1 == lost[j]:
                reserve[i] = True
                lost[j] = True
                attendants += 1
            if reserve[i] - 1 == lost[j]:
                reserve[i] = True
                lost[j] = True
                attendants += 1
    return attendants


import sys

n = int(sys.stdin.readline().rstrip())
lost = list(map(int, sys.stdin.readline().split()))
reserve = list(map(int, sys.stdin.readline().split()))

def solution(n, lost, reserve):
    s_lost = set(lost) - set(reserve)
    s_reserve = set(reserve) - set(lost)
    
    for extra in s_reserve:
        for need in s_lost:
            if extra + 1 == need:
                s_reserve.remove(extra)
                s_lost.remove(need)
            elif extra - 1 == need:
                s_reserve.remove(extra)
                s_lost.remove(need) 
    return n - len(s_lost)
