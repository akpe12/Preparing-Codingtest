Q. 당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. 
N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 
가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.
nums의 개수는 항상 짝수
*입출력 예*
nums	result
[3,1,2,3]	2
[3,3,3,2,2,4]	3
[3,3,3,2,2,2]	2

* 이 문제의 핵심은?
-> 가져갈 수 있는 최대 종류의 수를 찾는 것이다.
-> 그럼 결국 중복되지 않은 수의 개수를 return하면 된다.

- 다른 사람의 풀이
def solution(ls):
    return min(len(ls)/2, len(set(ls)))

- 나의 풀이
def solution(nums):
    answer = 0
    #가져갈 수 있는 최대 개수를 num에 저장한다.
    #중복되지 않은 수의 개수가 가져갈 수 있는 최대 개수(n//2)를 넘을 수도 있기 때문이다.
    num = len(nums) // 2
    #중복된 수들은 제거하고 현재 있는 각각 다른 종류의 개수를
    #setNum에 저장한다.
    setNum = len(set(nums))
    
    #중복되지 않은 수의 개수가 가져갈 수 있는 최대 개수를 넘으면:
    #nums//2한 값이 저장된 가져갈 수 있는 최대의 개수를 답으로 return한다.
    if setNum > num:
        answer = num
    else:
        answer = setNum
    
    return answer
    
*핵심*
setNum보다 num의 개수가 적을 때, num이 모두 다른 종류의 것들이라고 판단할 수 있는 이유는?
-> [1, 2, 3, 4, 5, 6]이 nums라고 가정해보자
이러면 setNum은 6이라는 개수가 저장되고, num에는 nums // 2인 3이 저장된다.
setNum이 6이기에 6개까지는 무조건 다른 종류라는 게 보증이 되는 셈이다.
따라서, 안심하고 가져갈 수 있는 최대 개수를 답으로 return할 수 있는 것이다.
