import sys
row, column = map(int, sys.stdin.readline().split())
graph = []
result = 0

for _ in range(row):
    #input()과 sys.stdin.readline().split()는 받는 방식이 다르다....
    #input() == sys.stdin.readline().rstrip()
    graph.append(list(map(int, sys.stdin.readline().rstrip())))

def dfs(x ,y):
    if x <= -1 or x >= row or y <= -1 or y >= column:
        return False
    if graph[x][y] == 0:
        graph[x][y] = 1
        dfs(x - 1, y)
        dfs(x + 1, y)
        dfs(x, y - 1)
        dfs(x, y + 1)
        return True
    return False

for i in range(row):
    for j in range(column):
        #결국 시작점의 영역에서 return되는 True는 한 개이다.
        #한 영역에서 또 다른 True가 반환되지 않는 이유는
        #함수 안에 상,하,좌,우를 살피는 4개의 재귀함수를 심어놨기 때문이다.
        #(예제문제 기준)진짜 함수인 dfs(0, 0) 안에서 무수히 많은 True가 반환되는 것이며
        #정작 최종 반환은 dfs(0, 0)의 True 반환 1개인 것이다. 
        if dfs(i, j) == True:
            result += 1
print(result)
