
1. 2차원 배열에서 극댓값 찾기

* 언제나 이진 탐색을 위해서 배열은 내림차순이든 오름차순이든 정렬된 배열을 사용해야 한다.

(a) 비교를 위한 기준 값을 각 행의 맨 마지막 인덱스 값으로 설정한다.
-> 각 행에서 가장 큰 값을 비교를 위한 기준값으로 삼는다.
(b) (i, j)에서 찾은 값과 (i, j - 1) and (i, j + 1)을 비교한다.
(c - 1) (i, j - 1) 혹은 (i , j + 1)이 선택됐다면 1/2의 범위로 탐색해야 할 열이 줄어드는 결과를 볼 수 있다. 그리고 이 방법을 반복한다.
(c - 2) 위의 둘 중 한 열이 선택되지 않았다면 (i, j)이 극댓값인 것이다.

시간 복잡도는 최악의 상황에서 nxm 배열이므로 O(n log m)이다.

def matrixBinary(target, arr):
    row = 0
    column = len(arr[row]) - 1
    
    while (row < len(arr) and column >= 0):
        if arr[row][column] == target:
            return [row, column]
        if arr[row][column] < target:
            row += 1
        else:
            column -= 1
    return [-1, -1]
