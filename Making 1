p.217

Q. 정수 x가 주어질 때, 사용할 수 있는 연산은 4가지이다.
1. x가 5로 나눠떨어지면, 5로 나눈다.
2. x가 3으로 나눠떨어지면, 3으로 나눈다.
3. x가 2로 나눠떨어지면, 2로 나눈다.
4. x에서 1을 뺀다.
연산 4개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
Input: 정수 x
Output: 연산 횟수의 최솟값

import sys

num = int(sys.stdin.readline().rstrip())
#보텀업 방식에서 사용되는 결과 저장용 리스트
#DP 테이블이라 불린다.
#한번 계산한 식의 값을 저장하는 곳
count = [0] * 30001

for i in range(2, num + 1):
    #빼기라는 연산을 한번 포함했을 때
    #정수 값 i를 1로 만들 때의 횟수의 최솟값
    count[i] = count[i - 1] + 1
    
    if i % 2 == 0:
        #i가 2로 나눠떨어진다면
        #빼기를 포함했을 때의 최솟값과
        #i의 값에서 2를 나눈 값의 연산 횟수의 최솟값 + 1
        #여기서 +1은 현재 진행하고 있는, i값을 2로 나누는 상황을 더해주는 것
        count[i] = min(count[i], count[i // 2] + 1)
    if i % 3 == 0:
        #i가 3으로 나눠떨어진다면
        #빼기를 포함했을 때의 최솟값과
        #i의 값에서 3을 나눈 값의 연산 횟수의 최솟값 + 1
        #여기서 +1은 현재 진행하고 있는, i값을 3으로 나누는 상황을 더해주는 것
        count[i] = min(count[i], count[i // 3] + 1)
    if i % 5 == 0:
        #i가 5로 나눠떨어진다면
        #빼기를 포함했을 때의 최솟값과
        #i의 값에서 5를 나눈 값의 연산 횟수의 최솟값 + 1
        #여기서 +1은 현재 진행하고 있는, i값을 5로 나누는 상황을 더해주는 것
        count[i] = min(count[i], count[i // 5] + 1)

print(count[num])
