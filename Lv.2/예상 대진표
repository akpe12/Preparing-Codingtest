Q. 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행합니다. 각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다. 
이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다. 만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 
3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다. 게임은 최종 한 명이 남을 때까지 진행됩니다.
이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌습니다. 
게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때, 
처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 함수를 완성해 주세요.
단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.

아예 손도 못 댄 문제다.
풀이 방법, 접근 방법이라고는 생각도 안 났다.
2의 지수를 이용해서 하는 것 같기는 했는데
하나도 떠오르지가 않아서 너무나도 내 자신에게 답답했다.

그리고 역시나 풀이 방법은 간단했다.
아쉬운 건 수학적으로 접근해야 한다는 아이디어는
내가 생각했던 아이디어와 겹쳤다는 사실이다.

- 다른 사람의 풀이

def solution(n,a,b):
    reps = 0

    while a != b:
        a = a // 2 + a % 2
        b = b // 2 + b % 2
        reps += 1

    return reps
    
