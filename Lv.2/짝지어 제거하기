Q. 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 
먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 
문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.

- 나의 풀이(다른 사람의 풀이 참고)

이것 또한 절대로 다른 사람을 참고하고 싶지 않았다.
내가 풀 수 있을 것 같은 문제였기 때문이다.
어떻게든 정규표현식으로 풀 수 있을 것 같았는데...
큰 오산이었다.

정말 절대 스택으로 보이지 않았다.
문제를 해결하는 방법을 파악하는 능력이 진짜 중요한 것 같다.
코드를 짜는 것은 그 다음의 일인 것 같다.

스택이라는 아이디어를 보자마자, 바로 풀 수 있었다.
내 머릿속에서 문제 풀이 방식의 힌트가 나타나는 날이 오기를 바란다.

def solution(s):
    stack = [s[0]]
    
    for i in range(1, len(s)):
        if stack[-1::] == [s[i]]:
            stack.pop()
        else:
            stack.append(s[i])

    if len(stack) != 0:
        return 0
    else:
        return 1
