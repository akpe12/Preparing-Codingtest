Q. 카카오에 입사한 신입 개발자 네오는 "카카오계정개발팀"에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. 
"네오"에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천해주는 프로그램을 개발하는 것입니다.
다음은 카카오 아이디의 규칙입니다.

import re

def solution(new_id):
    #1. 모든 대문자를 소문자로 치환한다.
    new_id = new_id.lower()
    #2. _-.을 제외한 특수문자를 모두 지운다.
    new_id = re.sub(r"[^\uAC00-\uD7A30-9a-zA-Z\s._-]", "", new_id)
    #3. 두 번 이상 연속된 마침표를 1개로 치환한다.
    new_id = re.sub("(([.]){2,})", ".", new_id)
    #4. 맨 앞 혹은 맨 뒤에 위치한 .을 제거한다.
    new_id = new_id.strip(".")
    #5. 아이디가 빈 문자열이라면, a를 추가해준다.
    #6. 아이디의 길이가 16자 이상이라면, 첫 15자를 제외한 나머지 문자를 모두 제거한다.
    #6.1 제거하고 난 후, 맨 뒤에 .이 있다면 제거해준다.
    if len(new_id) == 0 or len(new_id) >= 16:
        if len(new_id) == 0:
            new_id += "a"
        else:
            new_id = new_id[:15]
            if new_id[-1] == ".":
                new_id = new_id[:14]
    #7. 아이디의 길이가 2자 이하라면, 마지막 문자를 길이가 3이 될 때까지 반복해서 붙인다.
    if len(new_id) <= 2:
        while len(new_id) < 3:
            new_id += new_id[-1]
            
    return new_id
    
정규표현식 ()은 한 그룹으로 묶어서 판단하라는 명령을 내릴 때 쓴다.
9번째 줄의 정규표현식 {m,n} 혹은 {n}은 m번 반복되는 패턴부터 n번 반복되는 패턴까지 혹은 n번 반복되는 패턴까지를 명시해줄 때 쓴다.
7번째 줄의 맨 앞의 r은 raw를 나타내며 이스케이프 없어도 문자를 그대로 받아들이라는 명령이다.
