#https://www.acmicpc.net/problem/2667

import sys
#from collections import deque

size = int(sys.stdin.readline().rstrip())
graph = []
complexes = 0
dong = 2
dongs = []

for _ in range(size):
    graph.append(list(map(int, sys.stdin.readline().rstrip())))    

def dfs(x, y, dong):
    if x < 0 or x >= size or y < 0 or y >= size:
        return False
    if graph[x][y] == 1:
        graph[x][y] = dong
        dfs(x - 1, y, dong)
        dfs(x + 1, y, dong)
        dfs(x, y - 1, dong)
        dfs(x, y + 1, dong)
        return True
    return False

for i in range(size):
    for j in range(size):
        if dfs(i, j, dong) == True:
            complexes += 1
            dong += 1
graph_list = sum(graph, [])
for i in range(2, dong):
    counter = graph_list.count(i)
    dongs.append(counter)
dongs.sort()

print(complexes)
for i in dongs:
    if i != 0:
        print(i)
